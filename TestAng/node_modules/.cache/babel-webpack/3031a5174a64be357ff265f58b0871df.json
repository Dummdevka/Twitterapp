{"ast":null,"code":"import _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/TwitterApp/TestAng/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpErrorResponse } from '@angular/common/http';\nimport jwt_decode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tweets-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../add-tweets/add-tweets.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../my_tweets_button/tweets-button/tweets-button.component\";\nimport * as i7 from \"../tweet-item/tweet-item.component\";\n\nfunction TweetsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"p\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\n\nfunction TweetsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"app-tweets-button\", 9);\n    i0.ɵɵlistener(\"onShowMyTweets\", function TweetsComponent_div_4_Template_app_tweets_button_onShowMyTweets_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.myTweets();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", \"Show my tweets\");\n  }\n}\n\nfunction TweetsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-tweets-button\", 9);\n    i0.ɵɵlistener(\"onShowMyTweets\", function TweetsComponent_ng_template_5_Template_app_tweets_button_onShowMyTweets_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.allTweets();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"text\", \"Show all tweets\");\n  }\n}\n\nfunction TweetsComponent_app_tweet_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-tweet-item\", 10);\n    i0.ɵɵlistener(\"onDeleteTweet\", function TweetsComponent_app_tweet_item_8_Template_app_tweet_item_onDeleteTweet_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.deleteTweet($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tweet_r9 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"username\", ctx_r4.username)(\"tweet\", tweet_r9);\n  }\n}\n\nexport class TweetsComponent {\n  constructor(tweetService, router) {\n    this.tweetService = tweetService;\n    this.router = router;\n    this.error = '';\n    this.showAll = true;\n  }\n\n  checkAllow() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        let refresh = yield _this.tweetService.refreshToken();\n\n        if (refresh) {\n          localStorage.setItem('token', refresh.jwt);\n          console.log(refresh.jwt);\n        }\n\n        if (!refresh) {\n          console.log(refresh);\n          console.log('valid');\n        }\n      } catch (error) {\n        if (error instanceof HttpErrorResponse) {\n          console.log(error.error);\n        }\n\n        _this.onLogOut();\n      }\n    })();\n  }\n\n  getTweets() {\n    this.checkAllow();\n    this.tweetService.getTweets().subscribe(tweets => {\n      if (!tweets) {//Reload the page again to show the tweets\n      }\n\n      this.tweets = tweets;\n    }, err => {\n      if (err instanceof HttpErrorResponse) {\n        this.error = \"Tweets could not be fetched :(\"; //this.onLogOut();\n      }\n    });\n  } //}\n\n\n  onLogOut() {\n    //Clean localStorage\n    localStorage.clear(); //Clean cookie\n\n    this.tweetService.clearRefresh().subscribe(res => {\n      if (!res) {\n        console.log('You should change your password');\n        this.router.navigate(['/login']);\n      } else {\n        console.log(res);\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n  getUsername() {\n    try {\n      const token = localStorage.getItem('token');\n      const payload = jwt_decode(token);\n      this.username = payload.data['username'];\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.checkAllow();\n\n      _this2.getTweets();\n\n      _this2.getUsername();\n    })();\n  }\n\n  addTweet(tweet) {\n    //Refresh the token before sending the tweet\n    this.checkAllow();\n    console.log(tweet);\n    const newTweet = {\n      username: this.username,\n      tweet: tweet.tweet //image: tweet.image\n\n    }; //If there is a picture - send it as well\n\n    let tweetData = new FormData();\n    tweetData.append('username', this.username);\n    tweetData.append('tweet', tweet.tweet); //If there are any pictures attached\n\n    if (tweet.image !== null) {\n      tweetData.append('tweet-attachments', tweet.image);\n    } //Post tweet\n\n\n    this.tweetService.postTweet(tweetData).subscribe(tweets => {\n      this.tweets = tweets;\n    }, err => {\n      if (err instanceof HttpErrorResponse) {\n        this.error = err.error;\n      }\n    });\n  }\n\n  deleteTweet(tweet) {\n    this.checkAllow();\n    this.tweetService.removeTweet(tweet).subscribe(tweets => {\n      this.tweets = tweets;\n    }); //Refresh the token before removing the tweet\n  }\n\n  myTweets() {\n    let myTweets = [];\n    this.tweets.forEach(tweet => {\n      if (this.username === tweet.username) {\n        myTweets.push(tweet);\n      }\n    });\n    this.tweets = myTweets;\n    this.showAll = false;\n    ;\n  }\n\n  allTweets() {\n    this.getTweets();\n    this.showAll = true;\n  }\n\n}\n\nTweetsComponent.ɵfac = function TweetsComponent_Factory(t) {\n  return new (t || TweetsComponent)(i0.ɵɵdirectiveInject(i1.TestServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nTweetsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TweetsComponent,\n  selectors: [[\"app-tweets\"]],\n  decls: 11,\n  vars: 6,\n  consts: [[\"routerLink\", \"/account\", 1, \"tweets-button\", \"account\", 3, \"ngModel\", \"ngModelChange\"], [3, \"onAddTweet\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"showAllTweets\", \"\"], [1, \"tweets-feed\"], [3, \"username\", \"tweet\", \"onDeleteTweet\", 4, \"ngFor\", \"ngForOf\"], [1, \"tweets-button\", \"logout\", 3, \"click\"], [1, \"error-mess\"], [3, \"text\", \"onShowMyTweets\"], [3, \"username\", \"tweet\", \"onDeleteTweet\"]],\n  template: function TweetsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function TweetsComponent_Template_button_ngModelChange_0_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-add-tweets\", 1);\n      i0.ɵɵlistener(\"onAddTweet\", function TweetsComponent_Template_app_add_tweets_onAddTweet_2_listener($event) {\n        return ctx.addTweet($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TweetsComponent_div_3_Template, 3, 1, \"div\", 2);\n      i0.ɵɵtemplate(4, TweetsComponent_div_4_Template, 2, 1, \"div\", 3);\n      i0.ɵɵtemplate(5, TweetsComponent_ng_template_5_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtemplate(8, TweetsComponent_app_tweet_item_8_Template, 1, 2, \"app-tweet-item\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TweetsComponent_Template_button_click_9_listener() {\n        return ctx.onLogOut();\n      });\n      i0.ɵɵtext(10, \"Log out\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(6);\n\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Hi, \", ctx.username, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAll)(\"ngIfElse\", _r2);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tweets);\n    }\n  },\n  directives: [i2.RouterLink, i3.NgControlStatus, i3.NgModel, i4.AddTweetsComponent, i5.NgIf, i5.NgForOf, i6.TweetsButtonComponent, i7.TweetItemComponent],\n  styles: [\"*[_ngcontent-%COMP%] {\\n  border: none;\\n}\\nbody[_ngcontent-%COMP%] {\\n  background-color: #61988E;\\n  font-family: 'Arial';\\n  font: #493843;\\n}\\n.tweets-button[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  height: 2em;\\n  width: 80%;\\n  color: #493843;\\n  margin: 0 0 1em 0;\\n  text-align: left;\\n}\\n.logout[_ngcontent-%COMP%] {\\n  color: #111;\\n  background-color: #aec55b;\\n  width: 20%;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N0eWxlcy5sZXNzIiwidHdlZXRzLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBO0VBQ0ksWUFBQTtBQ1BKO0FEaUJBO0VBQ0kseUJBQUE7RUFDQSxvQkFBQTtFQUNBLGFBQUE7QUNmSjtBQUxBO0VEVUkseUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQ1pBLGdCQUFBO0FBV0o7QUFFQTtFQUNJLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtBQUFKIiwiZmlsZSI6InR3ZWV0cy5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuQGJyb3duOiAjNDkzODQzO1xuQGRhcmstZ3JlZW46ICM2MTk4OEU7XG5AbGlnaHQtZ3JlZW46ICNBMEIyQTY7XG5AZmxlc2g6ICNDQkJGQkI7XG5AcGVhY2g6ICNFQUJEQTg7XG5cbkBhcmlhbDogJ0FyaWFsJztcbip7XG4gICAgYm9yZGVyOiBub25lO1xufVxuLmJ0bihAY29sb3IsIEBoZWlnaHQsIEB3aWR0aCwgQG10LCBAbWwsIEBtYiwgQG1yKXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAY29sb3I7XG4gICAgaGVpZ2h0OiBAaGVpZ2h0O1xuICAgIHdpZHRoOiBAd2lkdGg7XG4gICAgY29sb3I6IEBicm93bjtcbiAgICBtYXJnaW46IEBtdCBAbWwgQG1iIEBtcjtcbn1cblxuYm9keXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAZGFyay1ncmVlbjtcbiAgICBmb250LWZhbWlseTogQGFyaWFsO1xuICAgIGZvbnQ6IEBicm93bjtcbn0iLCJAaW1wb3J0IFwiLi4vLi4vLi4vLi4vc3R5bGVzLmxlc3NcIjtcblxuLnR3ZWV0cy1idXR0b257XG4gICAgLmJ0bihpbmhlcml0LCAyZW0sIDgwJSwgMCwwLDFlbSwwKTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XG4gICAgLy8gYm9yZGVyOiBub25lO1xuICAgIC8vIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAvLyBmb250LXNpemU6IDE2cHg7XG4gICAgLy8gY29sb3I6IHJnYigxNzQsIDE5NywgOTEpO1xuICAgIC8vIHBhZGRpbmc6IDVweDtcbiAgICAvLyB3aWR0aDogODAlO1xuICAgIC8vIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgLy8gdGV4dC1hbGlnbjogbGVmdDtcbiAgICAvLyBkaXNwbGF5OiBibG9jaztcbiAgICAvLyBjdXJzb3I6IHBvaW50ZXI7XG59XG4ubG9nb3V0e1xuICAgIGNvbG9yOiAjMTExO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzQsIDE5NywgOTEpO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"]\n});","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/TwitterApp/TestAng/src/app/tweets/components/tweets/tweets.component.ts","/Applications/XAMPP/xamppfiles/htdocs/TwitterApp/TestAng/src/app/tweets/components/tweets/tweets.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Tweet } from 'src/app/Tweet';\nimport { Router } from '@angular/router';\nimport jwt_decode, {JwtPayload,JwtDecodeOptions,JwtHeader} from \"jwt-decode\";\nimport { TestServiceService } from 'src/app/tweets-service.service';\nimport { TweetsInterceptorInterceptor } from '../../tweets-interceptor.interceptor';\nimport { forkJoin } from 'rxjs';\n@Component({\n  selector: 'app-tweets',\n  templateUrl: './tweets.component.html',\n  styleUrls: ['./tweets.component.less']\n})\nexport class TweetsComponent implements OnInit {\n  tweets!:Tweet[];\n  error = '';\n  username!:string;\n  showAll = true;\n  uploadedImg!: File;\n  constructor(public tweetService:TestServiceService, private router: Router) {\n    \n      \n   }\n   async checkAllow(){\n    try{\n      let refresh = await this.tweetService.refreshToken();\n    if(refresh){\n      localStorage.setItem('token', refresh.jwt);\n      console.log(refresh.jwt);\n    }\n    if(!refresh){\n      console.log(refresh);\n      console.log('valid');\n    }\n    \n    } catch(error){\n      if(error instanceof HttpErrorResponse){\n        console.log(error.error);\n      }\n      this.onLogOut();\n    }\n   }\n   getTweets(){\n      this.checkAllow();\n      this.tweetService.getTweets().subscribe(\n        tweets=>{\n        if(!tweets){\n  \n          //Reload the page again to show the tweets\n          \n        }\n        this.tweets=tweets\n      },\n  \n        err=>{\n          if(err instanceof HttpErrorResponse){\n            this.error = \"Tweets could not be fetched :(\";\n            //this.onLogOut();\n          }\n        });\n      } \n      //}\n      \n  \n   onLogOut(){\n    //Clean localStorage\n    localStorage.clear();\n    //Clean cookie\n    this.tweetService.clearRefresh().subscribe(\n      res=>{\n        if(!res){\n          console.log('You should change your password');\n          this.router.navigate(['/login']);\n        } \n        else{\n          console.log(res);\n          this.router.navigate(['/login']);\n        }\n      }\n    );\n  }\n  \n  getUsername(this: any){\n    try{\n      const token = localStorage.getItem('token');\n      const payload: any = jwt_decode(token!);\n      this.username = payload.data['username'];\n    } catch(error){\n      console.log(error);\n    }\n\n  }\n async ngOnInit() {\n      await this.checkAllow();\n      this.getTweets();\n      this.getUsername();\n      \n}\naddTweet(tweet:Tweet){\n  //Refresh the token before sending the tweet\n  this.checkAllow();\n  console.log(tweet);\n  const newTweet:Tweet = {\n    username: this.username,\n    tweet: tweet.tweet,\n    //image: tweet.image\n  }\n  //If there is a picture - send it as well\n  \n  let tweetData = new FormData;\n  tweetData.append('username', this.username);\n  tweetData.append('tweet', tweet.tweet);\n\n  //If there are any pictures attached\n  if(tweet.image !== null){\n    tweetData.append('tweet-attachments', tweet.image);\n  }\n  //Post tweet\n  this.tweetService.postTweet(tweetData).subscribe((tweets:Tweet[])=>{\n    this.tweets = tweets;\n  },\n  err=>{\n    if(err instanceof HttpErrorResponse){\n      this.error = err.error;\n    }\n  }\n  );\n}\n\ndeleteTweet(tweet: Tweet){\n  \n  this.checkAllow();\n  \n  this.tweetService.removeTweet(tweet).subscribe((tweets:Tweet[])=>{\n    this.tweets = tweets;\n  });\n\n  //Refresh the token before removing the tweet\n  \n\n}\n\n\nmyTweets(){\n  let myTweets: Tweet[]=[];\n  this.tweets.forEach(tweet => {\n    if(this.username === tweet.username){\n      myTweets.push(tweet);\n    }\n\n  })\n  this.tweets = myTweets;\n  this.showAll = false;\n  ;\n}\nallTweets(){\n  this.getTweets();\n  this.showAll=true;\n}\n}\n","<button  class=\"tweets-button account\"[(ngModel)]=\"username\" routerLink=\"/account\" >Hi, {{ username }}</button>\n<app-add-tweets (onAddTweet)=\"addTweet($event)\"></app-add-tweets>\n<div *ngIf=\"this.error\">\n    <p class=\"error-mess\">{{ this.error }}</p>\n</div>\n<div *ngIf=\"showAll; else showAllTweets\">\n    <app-tweets-button [text]=\"'Show my tweets'\" (onShowMyTweets)=\"myTweets()\"></app-tweets-button>\n</div>\n<ng-template #showAllTweets>\n    <app-tweets-button [text]=\"'Show all tweets'\" (onShowMyTweets)=\"allTweets()\"></app-tweets-button>\n</ng-template>\n<div class=\"tweets-feed\">\n    <app-tweet-item *ngFor=\"let tweet of tweets\" [username]=\"username\" [tweet]=\"tweet\" (onDeleteTweet)=\"deleteTweet($event)\"></app-tweet-item>\n</div>\n<button (click)=\"onLogOut()\" class=\"tweets-button logout\">Log out</button>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}